name: CI + Security Scans + CodeQL (Stable Final)

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  schedule:
    - cron: '0 3 * * 1'  # Weekly Monday run for CodeQL

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  build-test-sec:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout code
      - name: Checkout
        uses: actions/checkout@v4

      # 2. Setup Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # 3. Install dependencies from requirements.txt
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # 4. Run pytest (basic unit test)
      - name: Run pytest
        run: pytest -q

      # 5. Bandit SAST -> JSON
      - name: Run Bandit (output JSON)
        run: |
          bandit -r . \
            --severity-level medium \
            --confidence-level medium \
            -f json -o bandit.json

      - name: Upload Bandit report
        uses: actions/upload-artifact@v4
        with:
          name: bandit-report
          path: bandit.json

      # 6. pip-audit dependency scan -> JSON
      - name: pip-audit
        run: pip-audit -r requirements.txt -f json -o pip-audit.json

      - name: Upload pip-audit report
        uses: actions/upload-artifact@v4
        with:
          name: pip-audit-report
          path: pip-audit.json

      # 7. Install and run Gitleaks CLI (allow exit code 0)
      - name: Install Gitleaks
        run: |
          wget https://github.com/gitleaks/gitleaks/releases/download/v8.18.1/gitleaks_8.18.1_linux_x64.tar.gz
          tar -xvzf gitleaks_8.18.1_linux_x64.tar.gz
          sudo mv gitleaks /usr/local/bin/

      - name: Run Gitleaks â€“ secrets detection
        run: gitleaks detect --no-git -v --redact --report-format json --report-path gitleaks.json --exit-code 0

      - name: Upload Gitleaks report
        uses: actions/upload-artifact@v4
        with:
          name: gitleaks-report
          path: gitleaks.json

  codeql-analysis:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'python' ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: '/language:${{matrix.language}}'
